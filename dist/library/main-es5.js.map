{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/book/book-create/book-create.component.ts","webpack:///src/app/book/book-create/book-create.component.html","webpack:///src/app/book/book-list/book-list.component.ts","webpack:///src/app/book/book-list/book-list.component.html","webpack:///src/app/entities/book/book.service.ts","webpack:///src/app/entities/product/product.model.ts","webpack:///src/app/entities/product/product.service.ts","webpack:///src/app/product/product-create/product-create.component.ts","webpack:///src/app/product/product-create/product-create.component.html","webpack:///src/app/product/product-list/product-list.component.ts","webpack:///src/app/product/product-list/product-list.component.html","webpack:///src/app/shared/status.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","statusService","bookService","title","status","createdProduct","allBooks","bookById","console","log","getStatus","result","getAllBook","val","readBook","searchBook","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BookCreateComponent","BookListComponent","books","bookId","emit","BookService","http","booksUrl","get","toPromise","response","json","error","message","statusText","providedIn","Product","name","brand","_id","ProductService","productsUrl","product","post","ProductCreateComponent","productService","formBuilder","initForm","productForm","value","create","undefined","required","onSubmit","ProductListComponent","products","productToDisplay","loadAll","push","StatusService","statusUrl","environment","production","apiurl","DB_URI","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BookListComponent } from '../app/book/book-list/book-list.component';\nimport { BookCreateComponent } from '../app/book/book-create/book-create.component';\nimport { AppComponent } from '../app/app.component';\n\n\n\nconst routes: Routes = [\n  { path: 'bookcreate', component: BookCreateComponent }\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { StatusService } from './shared/status.service';\nimport { IProduct } from './entities/product/product.model';\nimport { BookModel } from './entities/book/book.model';\nimport { BookService } from 'src/app/entities/book/book.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Library';\n  status = 'DOWN';\n  createdProduct: IProduct = null;\n  allBooks: BookModel = null;\n  bookById: BookModel = null;\n  // book: Book = new Book();\n  constructor(\n    protected statusService: StatusService,\n    protected bookService: BookService,\n  ) { }\n\n  // Get the server status when starting the view.\n  ngOnInit() {\n    console.log(\"allBooks>>\",this.allBooks)\n    this.statusService\n      .getStatus()\n      .then((result: any) => {\n        this.status = result.status;\n      });\n\n    this.bookService\n      .getAllBook()\n      .then((result: any) => {\n        this.allBooks = result;\n      });\n    \n  }\n\n  \n  // searchBook(val){\n  //   const id = val;\n\n  //   this.bookService.get(id).subscribe(\n  //     data => {\n  //       this.bookById = data;\n  //       console.log(\"bookById>>\",this.bookById)\n  //     }\n  //   );\n  // }\n  searchBook(val){\n    console.log(\"search val>>\",val)\n      if(val != null || val != ''){\n        this.bookService.readBook(val).then((result: any) => {\n          console.log(\"books by id>>\",result)\n          this.bookById = result;\n      });\n      }\n  }\n\n}\n","\n<!-- Toolbar -->\n\n<div class=\"toolbar container\" role=\"banner\">\n  <img width=\"40\" alt=\"Logo\"\n    src=\"../assets/images/Library.png\" />\n  <span>E Library</span>\n  <div class=\"spacer\"></div>\n  \n</div>\n<div class=\"container\">\n  <h4>All Books:</h4>\n\n  <div class=\"col-md-12\">\n    <app-book-list (bookId)=\"searchBook($event)\" [allBooks]=\"allBooks\"></app-book-list>\n  </div>\n\n<div *ngIf=\"allBooks == null\" class=\"alert alert-info\" role=\"info\">\n    <span class=\"glyphicon glyphicon-exclamation-sign\" aria-hidden=\"true\"></span>\n    <span class=\"sr-only\">Information:</span>\n    The book collection is empty.\n</div>\n \n  <!-- <div class=\"col-md-12\">\n    <app-product-create (createdProduct)=\"onCreatedProduct($event)\"></app-product-create>\n  </div> -->\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Compiler } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpModule } from '@angular/http';\n// import { HttpClient } from '@angular/common/http';\nimport { ProductListComponent } from './product/product-list/product-list.component';\nimport { ProductCreateComponent } from './product/product-create/product-create.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BookListComponent } from './book/book-list/book-list.component';\nimport { BookCreateComponent } from './book/book-create/book-create.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductListComponent,\n    ProductCreateComponent,\n    BookListComponent,\n    BookCreateComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    // HttpClient,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-book-create',\n  templateUrl: './book-create.component.html',\n  styleUrls: ['./book-create.component.css']\n})\nexport class BookCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>book-create works!</p>\n","import { Component, OnInit, Input, OnChanges,Output, EventEmitter } from '@angular/core';\nimport { BookService } from 'src/app/entities/book/book.service';\nimport { BookModel } from 'src/app/entities/book/book.model';\n\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.css']\n})\nexport class BookListComponent implements OnInit {\n\n  books: Array<BookModel> = [];\n  @Input() allBooks: BookModel = null;\n  @Output() bookId = new EventEmitter<any>();\n\n  constructor(protected bookService: BookService) { }\n\n  ngOnInit(): void {\n    console.log(\"this.allBooks>>\",this.allBooks)\n  }\n  read(id: string) {\n    this.bookId.emit(id);\n  }\n\n  \n}\n","\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th scope=\"col\">Title</th>\n            <th scope=\"col\">Genre</th>\n            <th scope=\"col\">Author</th>\n            <th scope=\"col\">Publisher</th>\n        </tr>\n    </thead>\n    <tbody  *ngFor=\"let book of allBooks\">\n        <tr>\n            <td>{{ book.title }}</td>\n            <td>{{ book.genre }}</td>\n            <td>{{ book.author }}</td>\n            <td>{{ book.publisher }}</td>\n            <td> <a class=\"read\" (click)=\"read(book._id)\">Read Now</a> </td>\n            <!-- <td> <a class=\"delete\" (click)=\"delete(product._id)\">Delete</a> </td> -->\n        </tr>\n    </tbody>\n</table>","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { BookModel } from './book.model';\n// import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookService {\n    private booksUrl = '/api/books';\n\n    constructor(\n        private http: Http,\n        // private httpClient: HttpClient\n    ) { }\n\n    // Get books\n    getAllBook(): Promise<Array<BookModel>> {\n        return this.http.get(this.booksUrl)\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.error);\n    }\n\n\n    readBook(id: string): Promise<any> {\n        console.log(\"readbook func>>\",this.booksUrl)\n        return this.http.get(`${this.booksUrl}/${id}`).toPromise()\n            .then(response => response.json())\n            .catch(this.error);\n    }\n    // get(bookId: string): Observable<BookModel> {\n    //     const bookDetailsUrl = `${this.booksUrl}/${bookId}`;\n    //     return this.http.get<BookModel>(bookDetailsUrl);\n    // }\n\n    // Error handling\n    private error(error: any) {\n        let message = (error.message) ? error.message :\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        console.error(message);\n    }\n}\n","export interface IProduct {\n  _id?: string;\n  name: string;\n  brand: string;\n}\n\nexport class Product implements IProduct {\n  constructor(\n    public name: string,\n    public brand: string,\n    public _id?: string\n  ) {\n    this._id = _id ? _id : null;\n    this.name = name;\n    this.brand = brand;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { IProduct, Product } from './product.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProductService {\n    private productsUrl = '/api/products';\n\n    constructor(private http: Http) { }\n\n    // Get products\n    get(): Promise<Array<IProduct>> {\n        return this.http.get(this.productsUrl)\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.error);\n    }\n\n    // Create product\n    create(product: Product): Promise<IProduct> {\n        return this.http.post(this.productsUrl, product)\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.error);\n    }\n\n    // Delete a product\n    delete(id: string): Promise<any> {\n        return this.http.delete(`${this.productsUrl}/${id}`)\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.error);\n    }\n\n    // Error handling\n    private error(error: any) {\n        let message = (error.message) ? error.message :\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        console.error(message);\n    }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ProductService } from 'src/app/entities/product/product.service';\nimport { IProduct, Product } from 'src/app/entities/product/product.model';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n\n  productForm: FormGroup;\n  name: string = '';\n  brand: string = '';\n  error: boolean = false;\n\n  @Output() createdProduct = new EventEmitter<IProduct>();\n\n  constructor(protected productService: ProductService, protected formBuilder: FormBuilder) { }\n\n  // Init the form when starting the view.\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  // Manage the submit action and create the new product.\n  onSubmit() {\n    const product = new Product(this.productForm.value['name'], this.productForm.value['brand'], null);\n    this.productService.create(product).then((result: IProduct) => {\n      if (result === undefined) {\n        this.error = true;\n      } else {\n        this.error = false;\n        this.createdProduct.emit(result);\n      }\n    });\n  }\n\n  // Hide the error message.\n  hideError() {\n    this.error = false;\n  }\n\n  // Init the creation form.\n  private initForm() {\n    this.productForm = new FormGroup({\n      name: new FormControl(this.name, Validators.required),\n      brand: new FormControl(this.brand, Validators.required)\n    });\n  }\n\n}\n","<h4>Create a book:</h4>\n<div *ngIf=\"error\">\n    <hr>\n    <div class=\"alert alert-danger alert-dismissible\" role=\"alert\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span\n                aria-hidden=\"true\" (click)=\"hideError()\">&times;</span></button>\n        <strong>Warning!</strong> Error creating product.\n    </div>\n    <hr>\n</div>\n<form class=\"form-horizontal\" [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"name\" class=\"col-sm-2 control-label\">Name</label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"brand\" class=\"col-sm-2 control-label\">Brand</label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" id=\"brand\" formControlName=\"brand\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"col-sm-offset-2 col-sm-10\">\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!productForm.valid\">Create</button>\n        </div>\n    </div>\n</form>","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { ProductService } from 'src/app/entities/product/product.service';\nimport { IProduct } from 'src/app/entities/product/product.model';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit, OnChanges {\n\n  products: Array<IProduct> = [];\n  @Input() productToDisplay: IProduct = null;\n\n  constructor(protected productService: ProductService) { }\n\n  // Load all the products when starting the view.\n  ngOnInit(): void {\n    this.loadAll();\n  }\n\n  // If new product created, we add it to the list.\n  ngOnChanges(): void {\n    if (this.productToDisplay !== null) {\n      this.products.push(this.productToDisplay);\n    }\n  }\n\n  // Delete a product. \n  delete(id: string) {\n    this.productService.delete(id).then((result: any) => this.loadAll());\n  }\n\n  // Load all products.\n  private loadAll() {\n    this.productService\n      .get()\n      .then((result: Array<IProduct>) => {\n        this.products = result;\n      });\n  }\n\n}\n","<h4>All Books:</h4>\n\n<table *ngIf=\"products.length > 0\" class=\"table\">\n    <thead>\n        <tr>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Brand</th>\n            <th scope=\"col\">Actions</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let product of products\">\n            <td>{{ product.name }}</td>\n            <td>{{ product.brand }}</td>\n            <td> <a class=\"delete\" (click)=\"delete(product._id)\">Delete</a> </td>\n        </tr>\n    </tbody>\n</table>\n\n<div *ngIf=\"products.length === 0\" class=\"alert alert-info\" role=\"info\">\n    <span class=\"glyphicon glyphicon-exclamation-sign\" aria-hidden=\"true\"></span>\n    <span class=\"sr-only\">Information:</span>\n    The product collection is empty.\n</div>","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusService {\n  private statusUrl = '/api/status';\n\n  constructor(private http: Http) { }\n\n  // Get the status\n  getStatus(): Promise<void | any> {\n    return this.http.get(this.statusUrl)\n               .toPromise()\n               .then(response => response.json())\n               .catch(this.error);\n  }\n\n  // Error handling\n  private error (error: any) {\n    let message = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.error(message);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiurl: '',\n  DB_URI: 'mongodb+srv://admin:admin@cluster02.wf7pc.mongodb.net/library?retryWrites=true&w=majority'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}