{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/book/book-list/book-list.component.ts","./src/app/book/book-list/book-list.component.html","./src/app/entities/book/book.service.ts","./src/app/entities/product/product.model.ts","./src/app/entities/product/product.service.ts","./src/app/product/product-create/product-create.component.ts","./src/app/product/product-create/product-create.component.html","./src/app/product/product-list/product-list.component.ts","./src/app/product/product-list/product-list.component.html","./src/app/shared/status.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n// import { NgModule } from '@angular/core';\n// import { Routes, RouterModule } from '@angular/router';\n// import { from } from 'rxjs';\n\n// import { BookListComponent } from '../app/home/book-list/book-list.component';\n\n// const routes: Routes = [\n  \n//   {\n//     path: '',\n//     component: BookListComponent,\n//     children: [\n//       {\n//         path: '',\n//         component: AppHomeControllerComponent\n//       },\n//       {\n//         path: 'page-not-found',\n//         component: PageNotFoundControllerComponent\n//       },\n//       {\n//         path: 'search/:keyword',\n//         component: SearchResultControllerComponent\n//       },\n//       {\n//         path: 'teacher/:teacherid',\n//         component: TeacherProfileControllerComponent\n//       },\n//       {\n//         path: 'login',\n//         component: LoginControllerComponent\n//       },\n//       {\n//         path: 'liveclasses',\n//         component: LiveClassesHomeControllerComponent\n//       },\n//       {\n//         path: ':id',\n//         component: TopicHomeControllerComponent\n//       },\n//       {\n//         path: ':topicid/:skillid/:flowid',\n//         component: PlaylistDetailsControllerComponent\n//       },\n//       {\n//         path: ':topicid/:skillid',\n//         component: SkillsDetailsControllerComponent\n//       }\n//     ]\n//   },\n//   {\n//     path: '**',\n//     redirectTo: 'page-not-found'\n//   }\n// ];\n\n// @NgModule({\n//   imports: [RouterModule.forRoot(routes)],\n//   exports: [RouterModule]\n// })\n// export class AppRoutingModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { StatusService } from './shared/status.service';\nimport { IProduct } from './entities/product/product.model';\nimport { BookModel } from './entities/book/book.model';\nimport { BookService } from 'src/app/entities/book/book.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Library';\n  status = 'DOWN';\n  createdProduct: IProduct = null;\n  allBooks: BookModel = null;\n  bookById: BookModel = null;\n  // book: Book = new Book();\n  constructor(\n    protected statusService: StatusService,\n    protected bookService: BookService,\n  ) { }\n\n  // Get the server status when starting the view.\n  ngOnInit() {\n    console.log(\"allBooks>>\",this.allBooks)\n    this.statusService\n      .getStatus()\n      .then((result: any) => {\n        this.status = result.status;\n      });\n\n    this.bookService\n      .getAllBook()\n      .then((result: any) => {\n        this.allBooks = result;\n      });\n    \n  }\n\n  \n  // searchBook(val){\n  //   const id = val;\n\n  //   this.bookService.get(id).subscribe(\n  //     data => {\n  //       this.bookById = data;\n  //       console.log(\"bookById>>\",this.bookById)\n  //     }\n  //   );\n  // }\n  searchBook(val){\n    console.log(\"search val>>\",val)\n      if(val != null || val != ''){\n        this.bookService.readBook(val).then((result: any) => {\n          console.log(\"books by id>>\",result)\n          this.bookById = result;\n      });\n      }\n  }\n\n}\n","\n<!-- Toolbar -->\n\n<div class=\"toolbar container\" role=\"banner\">\n  <img width=\"40\" alt=\"Logo\"\n    src=\"../assets/images/Library.png\" />\n  <span>E Library</span>\n  <div class=\"spacer\"></div>\n  \n</div>\n<div class=\"container\">\n  <h4>All Books:</h4>\n\n  <div class=\"col-md-12\">\n    <app-book-list (bookId)=\"searchBook($event)\" [allBooks]=\"allBooks\"></app-book-list>\n  </div>\n\n<div *ngIf=\"allBooks == null\" class=\"alert alert-info\" role=\"info\">\n    <span class=\"glyphicon glyphicon-exclamation-sign\" aria-hidden=\"true\"></span>\n    <span class=\"sr-only\">Information:</span>\n    The book collection is empty.\n</div>\n \n  <!-- <div class=\"col-md-12\">\n    <app-product-create (createdProduct)=\"onCreatedProduct($event)\"></app-product-create>\n  </div> -->\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Compiler } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpModule } from '@angular/http';\n// import { HttpClient } from '@angular/common/http';\nimport { ProductListComponent } from './product/product-list/product-list.component';\nimport { ProductCreateComponent } from './product/product-create/product-create.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BookListComponent } from './book/book-list/book-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductListComponent,\n    ProductCreateComponent,\n    BookListComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    // HttpClient,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, OnChanges,Output, EventEmitter } from '@angular/core';\nimport { BookService } from 'src/app/entities/book/book.service';\nimport { BookModel } from 'src/app/entities/book/book.model';\n\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.css']\n})\nexport class BookListComponent implements OnInit {\n\n  books: Array<BookModel> = [];\n  @Input() allBooks: BookModel = null;\n  @Output() bookId = new EventEmitter<any>();\n\n  constructor(protected bookService: BookService) { }\n\n  ngOnInit(): void {\n    console.log(\"this.allBooks>>\",this.allBooks)\n  }\n  read(id: string) {\n    this.bookId.emit(id);\n  }\n\n  \n}\n","\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th scope=\"col\">Title</th>\n            <th scope=\"col\">Genre</th>\n            <th scope=\"col\">Author</th>\n            <th scope=\"col\">Publisher</th>\n        </tr>\n    </thead>\n    <tbody  *ngFor=\"let book of allBooks\">\n        <tr>\n            <td>{{ book.title }}</td>\n            <td>{{ book.genre }}</td>\n            <td>{{ book.author }}</td>\n            <td>{{ book.publisher }}</td>\n            <td> <a class=\"read\" (click)=\"read(book._id)\">Read Now</a> </td>\n            <!-- <td> <a class=\"delete\" (click)=\"delete(product._id)\">Delete</a> </td> -->\n        </tr>\n    </tbody>\n</table>","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { BookModel } from './book.model';\n// import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookService {\n    private booksUrl = '/api/books';\n\n    constructor(\n        private http: Http,\n        // private httpClient: HttpClient\n    ) { }\n\n    // Get books\n    getAllBook(): Promise<Array<BookModel>> {\n        return this.http.get(this.booksUrl)\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.error);\n    }\n\n\n    readBook(id: string): Promise<any> {\n        console.log(\"readbook func>>\",this.booksUrl)\n        return this.http.get(`${this.booksUrl}/${id}`).toPromise()\n            .then(response => response.json())\n            .catch(this.error);\n    }\n    // get(bookId: string): Observable<BookModel> {\n    //     const bookDetailsUrl = `${this.booksUrl}/${bookId}`;\n    //     return this.http.get<BookModel>(bookDetailsUrl);\n    // }\n\n    // Error handling\n    private error(error: any) {\n        let message = (error.message) ? error.message :\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        console.error(message);\n    }\n}\n","export interface IProduct {\n  _id?: string;\n  name: string;\n  brand: string;\n}\n\nexport class Product implements IProduct {\n  constructor(\n    public name: string,\n    public brand: string,\n    public _id?: string\n  ) {\n    this._id = _id ? _id : null;\n    this.name = name;\n    this.brand = brand;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { IProduct, Product } from './product.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProductService {\n    private productsUrl = '/api/products';\n\n    constructor(private http: Http) { }\n\n    // Get products\n    get(): Promise<Array<IProduct>> {\n        return this.http.get(this.productsUrl)\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.error);\n    }\n\n    // Create product\n    create(product: Product): Promise<IProduct> {\n        return this.http.post(this.productsUrl, product)\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.error);\n    }\n\n    // Delete a product\n    delete(id: string): Promise<any> {\n        return this.http.delete(`${this.productsUrl}/${id}`)\n            .toPromise()\n            .then(response => response.json())\n            .catch(this.error);\n    }\n\n    // Error handling\n    private error(error: any) {\n        let message = (error.message) ? error.message :\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        console.error(message);\n    }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ProductService } from 'src/app/entities/product/product.service';\nimport { IProduct, Product } from 'src/app/entities/product/product.model';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n\n  productForm: FormGroup;\n  name: string = '';\n  brand: string = '';\n  error: boolean = false;\n\n  @Output() createdProduct = new EventEmitter<IProduct>();\n\n  constructor(protected productService: ProductService, protected formBuilder: FormBuilder) { }\n\n  // Init the form when starting the view.\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  // Manage the submit action and create the new product.\n  onSubmit() {\n    const product = new Product(this.productForm.value['name'], this.productForm.value['brand'], null);\n    this.productService.create(product).then((result: IProduct) => {\n      if (result === undefined) {\n        this.error = true;\n      } else {\n        this.error = false;\n        this.createdProduct.emit(result);\n      }\n    });\n  }\n\n  // Hide the error message.\n  hideError() {\n    this.error = false;\n  }\n\n  // Init the creation form.\n  private initForm() {\n    this.productForm = new FormGroup({\n      name: new FormControl(this.name, Validators.required),\n      brand: new FormControl(this.brand, Validators.required)\n    });\n  }\n\n}\n","<h4>Create a book:</h4>\n<div *ngIf=\"error\">\n    <hr>\n    <div class=\"alert alert-danger alert-dismissible\" role=\"alert\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span\n                aria-hidden=\"true\" (click)=\"hideError()\">&times;</span></button>\n        <strong>Warning!</strong> Error creating product.\n    </div>\n    <hr>\n</div>\n<form class=\"form-horizontal\" [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"name\" class=\"col-sm-2 control-label\">Name</label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"brand\" class=\"col-sm-2 control-label\">Brand</label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" id=\"brand\" formControlName=\"brand\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"col-sm-offset-2 col-sm-10\">\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!productForm.valid\">Create</button>\n        </div>\n    </div>\n</form>","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { ProductService } from 'src/app/entities/product/product.service';\nimport { IProduct } from 'src/app/entities/product/product.model';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit, OnChanges {\n\n  products: Array<IProduct> = [];\n  @Input() productToDisplay: IProduct = null;\n\n  constructor(protected productService: ProductService) { }\n\n  // Load all the products when starting the view.\n  ngOnInit(): void {\n    this.loadAll();\n  }\n\n  // If new product created, we add it to the list.\n  ngOnChanges(): void {\n    if (this.productToDisplay !== null) {\n      this.products.push(this.productToDisplay);\n    }\n  }\n\n  // Delete a product. \n  delete(id: string) {\n    this.productService.delete(id).then((result: any) => this.loadAll());\n  }\n\n  // Load all products.\n  private loadAll() {\n    this.productService\n      .get()\n      .then((result: Array<IProduct>) => {\n        this.products = result;\n      });\n  }\n\n}\n","<h4>All Books:</h4>\n\n<table *ngIf=\"products.length > 0\" class=\"table\">\n    <thead>\n        <tr>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Brand</th>\n            <th scope=\"col\">Actions</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let product of products\">\n            <td>{{ product.name }}</td>\n            <td>{{ product.brand }}</td>\n            <td> <a class=\"delete\" (click)=\"delete(product._id)\">Delete</a> </td>\n        </tr>\n    </tbody>\n</table>\n\n<div *ngIf=\"products.length === 0\" class=\"alert alert-info\" role=\"info\">\n    <span class=\"glyphicon glyphicon-exclamation-sign\" aria-hidden=\"true\"></span>\n    <span class=\"sr-only\">Information:</span>\n    The product collection is empty.\n</div>","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusService {\n  private statusUrl = '/api/status';\n\n  constructor(private http: Http) { }\n\n  // Get the status\n  getStatus(): Promise<void | any> {\n    return this.http.get(this.statusUrl)\n               .toPromise()\n               .then(response => response.json())\n               .catch(this.error);\n  }\n\n  // Error handling\n  private error (error: any) {\n    let message = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.error(message);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiurl: '',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}